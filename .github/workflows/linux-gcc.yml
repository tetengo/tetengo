# GitHub Actions Workflow
# Build with GCC on Linux
# Copyright 2019-2021 kaoru  https://www.tetengo.org/

name: Linux - GCC

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags:     [ v* ]
  pull_request:
    branches: [ master ]

env:
  CACHE_REV:        0
  CONCURRENT_BUILD: 4
  BOOST_VER:        1_76_0
  BOOST_VER_DOT:    1.76.0

jobs:
  build:
    name:    Build
    runs-on: ubuntu-20.04
    steps:
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get -y update
        sudo apt-get -y install \
          autoconf-archive
    
    - name: Cache Boost build
      uses: actions/cache@v1
      with:
        path: ../boost_build
        key: ${{ env.CACHE_REV }}-Linux-GCC-Boost-${{ env.BOOST_VER }}
    
    - name: Build Boost
      shell: bash
      run: |
        mkdir -p ../boost_build
        cd ../boost_build
        curl -L -o boost_${BOOST_VER}.tar.bz2 https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VER_DOT}/source/boost_${BOOST_VER}.tar.bz2
        tar xvf boost_${BOOST_VER}.tar.bz2
        cd boost_${BOOST_VER}
        ./bootstrap.sh --with-toolset=gcc
        (./b2 -j ${{ env.CONCURRENT_BUILD }} toolset=gcc-10 variant=release link=static cxxflags="-std=gnu++11" || :)
        (sudo ./b2 -j ${{ env.CONCURRENT_BUILD }} toolset=gcc-10 variant=release link=static install --prefix=/usr/local || :)
    
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Configure
      shell: bash
      run: |
        export DISTCHECK_CONFIGURE_FLAGS=" \
          CC=gcc-10 \
          CXX=g++-10 \
        "
        ./bootstrap.sh
        mkdir -p build
        cd build
        ../configure $DISTCHECK_CONFIGURE_FLAGS
    
    - name: Build
      shell: bash
      run: |
        export DISTCHECK_CONFIGURE_FLAGS=" \
          CC=gcc-10 \
          CXX=g++-10 \
        "
        export BOOST_TEST_LOG_LEVEL=warning
        cd build
        make -j ${{ env.CONCURRENT_BUILD }} check
