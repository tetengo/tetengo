# GitHub Actions Workflow
# Build with GCC on Linux
# Copyright 2019-2021 kaoru  https://www.tetengo.org/

name: Linux - GCC

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags:     [ v* ]
  pull_request:
    branches: [ master ]

env:
  CACHE_REV:        1
  CONCURRENT_BUILD: 4
  GCC_COMMAND:      gcc-10
  GXX_COMMAND:      g++-10
  BOOST_VER:        1_78_0
  BOOST_VER_DOT:    1.78.0
  BOOST_TOOLSET:    gcc

jobs:
  boost_build:
    name:    Boost Build
    runs-on: ubuntu-20.04
    steps:
    - name: Cache Boost build
      uses: actions/cache@v2
      with:
        path: .boost_build
        key: ${{ env.CACHE_REV }}-Linux-GCC-Boost-${{ env.BOOST_VER }}
    
    - name: Build Boost
      shell: bash
      run: |
        if [ ! -e .boost_build/boost_${{ env.BOOST_VER }}/.build_finished ];
        then
          mkdir -p .boost_build
          cd .boost_build
          curl -L -o boost_${{ env.BOOST_VER }}.tar.bz2 https://boostorg.jfrog.io/artifactory/main/release/${{ env.BOOST_VER_DOT }}/source/boost_${{ env.BOOST_VER }}.tar.bz2
          tar xvf boost_${{ env.BOOST_VER }}.tar.bz2
          cd boost_${{ env.BOOST_VER }}
          ./bootstrap.sh --with-toolset=${{ env.BOOST_TOOLSET }}
          (./b2 -j ${{ env.CONCURRENT_BUILD }} toolset=${{ env.BOOST_TOOLSET }} variant=release link=static || :)
          touch .build_finished
        fi
  
  build:
    name:    Build
    runs-on: ubuntu-20.04
    needs:   boost_build
    steps:
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get -y update
        sudo apt-get -y install \
          autoconf-archive
    
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Restore Boost build
      uses: actions/cache@v2
      with:
        path: .boost_build
        key: ${{ env.CACHE_REV }}-Linux-GCC-Boost-${{ env.BOOST_VER }}
    
    - name: Install Boost
      shell: bash
      run: |
        cd .boost_build/boost_${{ env.BOOST_VER }}
        (sudo ./b2 -j ${{ env.CONCURRENT_BUILD }} toolset=${{ env.BOOST_TOOLSET }} variant=release link=static install --prefix=/usr/local || :)
    
    - name: Configure
      shell: bash
      run: |
        export DISTCHECK_CONFIGURE_FLAGS=" \
          CC=${{ env.GCC_COMMAND }} \
          CXX=${{ env.GXX_COMMAND }} \
        "
        ./bootstrap.sh
        mkdir -p .build
        cd .build
        ../configure $DISTCHECK_CONFIGURE_FLAGS
    
    - name: Build
      shell: bash
      run: |
        export DISTCHECK_CONFIGURE_FLAGS=" \
          CC=${{ env.GCC_COMMAND }} \
          CXX=${{ env.GXX_COMMAND }} \
        "
        export BOOST_TEST_LOG_LEVEL=warning
        cd .build
        make -j ${{ env.CONCURRENT_BUILD }} check
