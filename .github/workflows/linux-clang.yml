# GitHub Actions Workflow
# Build with Clang on Linux
# Copyright 2019-2021 kaoru  https://www.tetengo.org/

name: Linux - Clang

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags:     [ v* ]
  pull_request:
    branches: [ master ]

env:
  CACHE_REV:        1
  CONCURRENT_BUILD: 4
  DOXYGEN_VER:      1.9.2
  BOOST_VER:        1_77_0
  BOOST_VER_DOT:    1.77.0

jobs:
  build:
    name:    Build
    runs-on: ubuntu-20.04
    steps:
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get -y update
        sudo apt-get -y install \
          autoconf-archive \
          bison \
          clang-9 \
          cmake \
          dos2unix \
          flex \
          graphviz \
          iwyu
    
    - name: Cache Doxygen build
      uses: actions/cache@v2
      with:
        path: ../doxygen_build
        key: ${{ env.CACHE_REV }}-Linux-Clang-Doxygen-${{ env.DOXYGEN_VER }}
    
    - name: Build Doxygen
      shell: bash
      run: |
        mkdir -p ../doxygen_build
        cd ../doxygen_build
        wget http://doxygen.nl/files/doxygen-${DOXYGEN_VER}.src.tar.gz
        tar -xf doxygen-${DOXYGEN_VER}.src.tar.gz
        mkdir -p doxygen-${DOXYGEN_VER}/build
        cd doxygen-${DOXYGEN_VER}/build
        cmake -G "Unix Makefiles" ..
        make -j ${{ env.CONCURRENT_BUILD }}
        sudo make -j ${{ env.CONCURRENT_BUILD }} install
    
    - name: Cache Boost build
      uses: actions/cache@v2
      with:
        path: ../boost_build
        key: ${{ env.CACHE_REV }}-Linux-Clang-Boost-${{ env.BOOST_VER }}
    
    - name: Build Boost
      shell: bash
      run: |
        mkdir -p ../boost_build
        cd ../boost_build
        curl -L -o boost_${BOOST_VER}.tar.bz2 https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VER_DOT}/source/boost_${BOOST_VER}.tar.bz2
        tar -xf boost_${BOOST_VER}.tar.bz2
        cd boost_${BOOST_VER}
        ./bootstrap.sh --with-toolset=clang
        (./b2 -j ${{ env.CONCURRENT_BUILD }} toolset=clang variant=release link=static cxxflags="-std=gnu++11" || :)
        (sudo ./b2 -j ${{ env.CONCURRENT_BUILD }} toolset=clang variant=release link=static install --prefix=/usr/local || :)
    
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Configure
      shell: bash
      run: |
        export DISTCHECK_CONFIGURE_FLAGS=" \
          CC=clang-11 \
          CXX=clang++-11 \
        "
        ./bootstrap.sh
        mkdir -p build
        cd build
        ../configure $DISTCHECK_CONFIGURE_FLAGS
    
    - name: Lint
      shell: bash
      run: |
        cd build
        make -j ${{ env.CONCURRENT_BUILD }} iwyu
    
    - name: Build and make archives
      shell: bash
      run: |
        export DISTCHECK_CONFIGURE_FLAGS=" \
          CC=clang-11 \
          CXX=clang++-11 \
        "
        export BOOST_TEST_LOG_LEVEL=warning
        cd build
        make -j ${{ env.CONCURRENT_BUILD }} distcheck
        make -j ${{ env.CONCURRENT_BUILD }} dist-bzip2
        make -j ${{ env.CONCURRENT_BUILD }} dist-zip
    
    - name: Make documents
      shell: bash
      run: |
        cd build
        make doc
    
    - name: Move artifacts
      shell: bash
      run: |
        mkdir artifacts
        mv build/tetengo-* artifacts
        mv build/doc artifacts
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts-linux
        path: artifacts
